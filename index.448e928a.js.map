{"mappings":"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","sources":["src/index.js"],"sourcesContent":["const sliderProps = {\n  fill: '#0B1EDF',\n  background: 'rgba(255, 255, 255, 0.214)',\n};\n\nconst slider = document.querySelector('.range__slider');\n\nconst sliderValue = document.querySelector('.length__title');\n\n// Using Event Listener to apply the fill and also change the value of the text.\nslider.querySelector('input').addEventListener('input', event => {\n  sliderValue.setAttribute('data-length', event.target.value);\n  applyFill(event.target);\n});\n// Selecting the range input and passing it in the applyFill func.\napplyFill(slider.querySelector('input'));\n// This function is responsible to create the trailing color and setting the fill.\nfunction applyFill(slider) {\n  const percentage =\n    (100 * (slider.value - slider.min)) / (slider.max - slider.min);\n  const bg = `linear-gradient(90deg, ${sliderProps.fill} ${percentage}%, ${\n    sliderProps.background\n  } ${percentage + 0.1}%)`;\n  slider.style.background = bg;\n  sliderValue.setAttribute('data-length', slider.value);\n}\n\n// Object of all the function names that we will use to create random letters of password\nconst randomFunc = {\n  lower: getRandomLower,\n  upper: getRandomUpper,\n  number: getRandomNumber,\n  symbol: getRandomSymbol,\n};\n\n// Random more secure value\nfunction secureMathRandom() {\n  return (\n    window.crypto.getRandomValues(new Uint32Array(1))[0] / (Math.pow(2, 32) - 1)\n  );\n}\n\n// Generator Functions\n// All the functions that are responsible to return a random value taht we will use to create password.\nfunction getRandomLower() {\n  return String.fromCharCode(Math.floor(Math.random() * 26) + 97);\n}\nfunction getRandomUpper() {\n  return String.fromCharCode(Math.floor(Math.random() * 26) + 65);\n}\nfunction getRandomNumber() {\n  return String.fromCharCode(Math.floor(secureMathRandom() * 10) + 48);\n}\nfunction getRandomSymbol() {\n  const symbols = '~!@#$%^&*()_+{}\":?><;.,';\n  return symbols[Math.floor(Math.random() * symbols.length)];\n}\n\n// Selecting all the DOM Elements that are necessary -->\n\n// The Viewbox where the result will be shown\nconst resultEl = document.getElementById('result');\n// The input slider, will use to change the length of the password\nconst lengthEl = document.getElementById('slider');\n\n// Checkboxes representing the options that is responsible to create differnt type of password based on user\nconst uppercaseEl = document.getElementById('uppercase');\nconst lowercaseEl = document.getElementById('lowercase');\nconst numberEl = document.getElementById('number');\nconst symbolEl = document.getElementById('symbol');\n\n// Button to generate the password\nconst generateBtn = document.getElementById('generate');\n// Button to copy the text\nconst copyBtn = document.getElementById('copy-btn');\n// Result viewbox container\nconst resultContainer = document.querySelector('.result');\n// Text info showed after generate button is clicked\nconst copyInfo = document.querySelector('.result__info.right');\n// Text appear after copy button is clicked\nconst copiedInfo = document.querySelector('.result__info.left');\n\n// if this variable is trye only then the copyBtn will appear, i.e. when the user first click generate the copyBth will interact.\nlet generatedPassword = false;\n\n// Update Css Props of the COPY button\n// Getting the bounds of the result viewbox container\nlet resultContainerBound = {\n  left: resultContainer.getBoundingClientRect().left,\n  top: resultContainer.getBoundingClientRect().top,\n};\n// This will update the position of the copy button based on mouse Position\nresultContainer.addEventListener('mousemove', e => {\n  resultContainerBound = {\n    left: resultContainer.getBoundingClientRect().left,\n    top: resultContainer.getBoundingClientRect().top,\n  };\n  if (generatedPassword) {\n    copyBtn.style.opacity = '1';\n    copyBtn.style.pointerEvents = 'all';\n    copyBtn.style.setProperty('--x', `${e.x - resultContainerBound.left}px`);\n    copyBtn.style.setProperty('--y', `${e.y - resultContainerBound.top}px`);\n  } else {\n    copyBtn.style.opacity = '0';\n    copyBtn.style.pointerEvents = 'none';\n  }\n});\nwindow.addEventListener('resize', e => {\n  resultContainerBound = {\n    left: resultContainer.getBoundingClientRect().left,\n    top: resultContainer.getBoundingClientRect().top,\n  };\n});\n\n// Copy Password in clipboard\ncopyBtn.addEventListener('click', () => {\n  const textarea = document.createElement('textarea');\n  const password = resultEl.innerText;\n  if (!password || password == 'CLICK GENERATE') {\n    return;\n  }\n  textarea.value = password;\n  document.body.appendChild(textarea);\n  textarea.select();\n  document.execCommand('copy');\n  textarea.remove();\n\n  copyInfo.style.transform = 'translateY(200%)';\n  copyInfo.style.opacity = '0';\n  copiedInfo.style.transform = 'translateY(0%)';\n  copiedInfo.style.opacity = '0.75';\n});\n\n// When Generate is clicked Password id generated.\ngenerateBtn.addEventListener('click', () => {\n  const length = +lengthEl.value;\n  const hasLower = lowercaseEl.checked;\n  const hasUpper = uppercaseEl.checked;\n  const hasNumber = numberEl.checked;\n  const hasSymbol = symbolEl.checked;\n  generatedPassword = true;\n  resultEl.innerText = generatePassword(\n    length,\n    hasLower,\n    hasUpper,\n    hasNumber,\n    hasSymbol\n  );\n  copyInfo.style.transform = 'translateY(0%)';\n  copyInfo.style.opacity = '0.75';\n  copiedInfo.style.transform = 'translateY(200%)';\n  copiedInfo.style.opacity = '0';\n});\n\n// Function responsible to generate password and then returning it.\nfunction generatePassword(length, lower, upper, number, symbol) {\n  let generatedPassword = '';\n  const typesCount = lower + upper + number + symbol;\n  const typesArr = [{ lower }, { upper }, { number }, { symbol }].filter(\n    item => Object.values(item)[0]\n  );\n  if (typesCount === 0) {\n    return '';\n  }\n  for (let i = 0; i < length; i++) {\n    typesArr.forEach(type => {\n      const funcName = Object.keys(type)[0];\n      generatedPassword += randomFunc[funcName]();\n    });\n  }\n  return generatedPassword\n    .slice(0, length)\n    .split('')\n    .sort(() => Math.random() - 0.5)\n    .join('');\n}\n\n// function that handles the checkboxes state, so at least one needs to be selected. The last checkbox will be disabled.\nfunction disableOnlyCheckbox() {\n  let totalChecked = [uppercaseEl, lowercaseEl, numberEl, symbolEl].filter(\n    el => el.checked\n  );\n  totalChecked.forEach(el => {\n    if (totalChecked.length == 1) {\n      el.disabled = true;\n    } else {\n      el.disabled = false;\n    }\n  });\n}\n\n[uppercaseEl, lowercaseEl, numberEl, symbolEl].forEach(el => {\n  el.addEventListener('click', () => {\n    disableOnlyCheckbox();\n  });\n});\n"],"names":["$b8f9b7833fa37166$var$sliderProps","$b8f9b7833fa37166$var$slider","document","querySelector","$b8f9b7833fa37166$var$sliderValue","$b8f9b7833fa37166$var$applyFill","slider1","percentage","value","min","max","bg","concat","style","background","setAttribute","addEventListener","event","target","$b8f9b7833fa37166$var$randomFunc","lower","String","fromCharCode","Math","floor","random","upper","number","window","crypto","getRandomValues","Uint32Array","pow","symbol","symbols","length","$b8f9b7833fa37166$var$resultEl","getElementById","$b8f9b7833fa37166$var$lengthEl","$b8f9b7833fa37166$var$uppercaseEl","$b8f9b7833fa37166$var$lowercaseEl","$b8f9b7833fa37166$var$numberEl","$b8f9b7833fa37166$var$symbolEl","$b8f9b7833fa37166$var$generateBtn","$b8f9b7833fa37166$var$copyBtn","$b8f9b7833fa37166$var$resultContainer","$b8f9b7833fa37166$var$copyInfo","$b8f9b7833fa37166$var$copiedInfo","$b8f9b7833fa37166$var$generatedPassword","$b8f9b7833fa37166$var$resultContainerBound","left","getBoundingClientRect","top","e","opacity","pointerEvents","setProperty","x","y","textarea","createElement","password","innerText","body","appendChild","select","execCommand","remove","transform","hasLower","checked","hasUpper","hasNumber","hasSymbol","generatedPassword1","typesCount","typesArr","filter","item","Object","values","i","forEach","type","funcName","keys","slice","split","sort","join","$b8f9b7833fa37166$var$generatePassword","el","totalChecked","disabled"],"version":3,"file":"index.448e928a.js.map"}